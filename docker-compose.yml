version: "3"
services:
# ahora se indican los servicios por el orden en que se quiere que se inicien. # Por ejemplo, mongo debe estar antes de order.
 mongo: #este es el mismo nombre usado en el run.sh de Order, y el
#application.properties, se resuelve en una dirección IP
  image: victorrg14/p1gps:db
  deploy:
   replicas: 1 # para escabilidad del servicio.
   resources:
    limits:
     cpus: "0.15"
     memory: 200M
   restart_policy:
    condition: on-failure #reinicar el contenedor si falla
  ports:
   - "28017:28017" # mapeo el Puerto del contenedor (derecha) con el puerto # del host del servicio (izquierda)
   - "27017:27017"
  volumes:
   - "db-data:/data/db" # para dar persistencia a la sesión
 order:
  image: victorrg14/p1gps:order
  depends_on:
   - "mongo" #le psamos al servicio order la ip del servicio mongo
  deploy:
   replicas: 1
   resources:
    limits:
     cpus: "0.2"
     memory: 300M #subid los límites si podéis/le cuesta arrancar
   restart_policy:
    condition: on-failure
  ports:
   - "8080:8080"
 web:
  image: victorrg14/p1gps:web
  deploy:
   replicas: 1
   resources:
    limits:
     cpus: "0.25"
     memory: 300M
   restart_policy:
    condition: on-failure
  ports:
   - "80:8080"

volumes:
 db-data:
